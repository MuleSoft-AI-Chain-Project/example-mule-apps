<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ms-inference="http://www.mulesoft.org/schema/mule/ms-inference"
	xmlns:a2a="http://www.mulesoft.org/schema/mule/a2a" xmlns:mac-inference="http://www.mulesoft.org/schema/mule/mac-inference"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:mcp="http://www.mulesoft.org/schema/mule/mcp" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/mcp http://www.mulesoft.org/schema/mule/mcp/current/mule-mcp.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/mac-inference http://www.mulesoft.org/schema/mule/mac-inference/current/mule-mac-inference.xsd
http://www.mulesoft.org/schema/mule/a2a http://www.mulesoft.org/schema/mule/a2a/current/mule-a2a.xsd
http://www.mulesoft.org/schema/mule/ms-inference http://www.mulesoft.org/schema/mule/ms-inference/current/mule-ms-inference.xsd">
	<sub-flow name="set-and-initialise-vars" doc:id="ddd5bf4b-9235-4b7e-9386-e400e5cd8410">
		<set-variable value='#[payload.message.parts[0].text default ""]' doc:name="Set task user prompt" doc:id="b1456931-b8a7-4677-b174-065899b1cb23" variableName="userPrompt" />
		<set-variable value="#[payload.id default uuid()]" doc:name="Set Task Id" doc:id="09dcca44-77ae-4647-becc-52969251f04d" variableName="task_id" />
		<set-variable value='#[(payload.sessionId) default ""]' doc:name="Set Session Id" doc:id="4ed0a3b7-ea19-40cf-ac20-714c9c008afc" variableName="session_id" />
		<set-variable value='#["OPENAI"]' doc:name="inferenceType" doc:id="7ce22fd1-8ef5-4f88-afb1-b6f6b9ba99f6" variableName="inferenceType"/>
		<set-variable value='${openai.apikey}' doc:name="apiKey" doc:id="028ca50e-98f4-4ae4-bbea-2e19d9edf32e" variableName="apiKey"/>
		<set-variable value='#["gpt-4o-mini"]' doc:name="model" doc:id="cc39205e-575d-4436-b049-717c0e25b49a" variableName="model"/>
		<set-variable value="#[{
  'ERP MCP Server': p('mcpserver.erp.url')
}]" doc:name="mcpservers" doc:id="3b60dd9c-fadb-4b7a-a438-3abf1f4a5063" variableName="mcpservers"/>
		<set-variable value='#["Tool results: "]' doc:name="set multiTools results" doc:id="2242b8da-a134-4b72-9ffd-93b87f69b91d" variableName="multiToolsResult" />
		<set-variable value="#[[]]" doc:name="set toolsUsed" doc:id="fd4e589e-fbe2-4275-baee-34e135b771bf" variableName="toolsUsed" />
		<set-variable value="#[[]]" doc:name="set COT" doc:id="720be86b-57e8-4fcc-b03f-06749e9d029c" variableName="chainsOfThoughts" />
		<set-variable value='#[{"tools":  []}]' doc:name="Set Tool Planning" doc:id="96b639fe-f99d-49b2-ae37-65df5d3ee7dd" variableName="planningPayload"/>
		<flow-ref doc:name="load prompts" doc:id="7c40a7dd-ba1f-4387-b686-edcd2fca6a19" name="load-prompts"/>
	</sub-flow>
	<sub-flow name="list-mcp-tools" doc:id="0873062a-222b-47a9-9b1a-895386e1fdb6">
		<mcp:list-tools doc:id="15db4396-dcb3-4949-9052-e2370c71413c" doc:name="MCP Client - List Tools" config-ref="MCP_Client"/>
		<logger level="DEBUG" doc:name="🛠️Available  MCP Tools 🛠️" doc:id="1d9e0f29-0f02-4e06-8878-4d768f70b0af" message='#[output text
---
"🛠️🛠️🛠️🛠️🛠️ ------------------- MCP Avaialble Tools ------------------- 🛠️🛠️🛠️🛠️🛠\n\n" ++

write(payload, "application/json") ++ "\n\n" ++

"🛠️🛠️🛠️🛠️🛠️ ------------------- MCP Avaialble Tools ------------------- 🛠️🛠️🛠️🛠️🛠\n\n"]' />
		<ee:transform doc:name="Save all available tools into the right format into variable tools" doc:id="1bbed898-7e73-4ef9-8f26-9b4ac6c33e53">
			<ee:message />
			<ee:variables>
				<ee:set-variable variableName="tools"><![CDATA[%dw 2.0
output application/json
---
payload map (item) -> {
	"type": "function",
	function: {
	  name: item.name,
	  description: item.description,
	  parameters: {
	    "type": "object",
	    properties: (read(item.inputSchema, "application/json").properties default {}),
	    required: (read(item.inputSchema, "application/json").required default [])
      }
    }
 }
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="DEBUG" doc:name="🛠️Converted  MCP Tools 🛠️" doc:id="168e037f-81cb-4ecd-88d8-456610555d95" message='#[output text
---
"🛠️🛠️🛠️🛠️🛠️ ------------------- Converted MCP Tools ------------------- 🛠️🛠️🛠️🛠️🛠\n\n" ++

write(vars.tools, "application/json") ++ "\n\n" ++

"🛠️🛠️🛠️🛠️🛠️ ------------------- MCP Avaialble Tools ------------------- 🛠️🛠️🛠️🛠️🛠\n\n"]' />
	</sub-flow>
	<sub-flow name="create-plan" doc:id="ef9c2d20-7967-4d7c-b56a-ddd9af66c363" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="4411dda8-14f0-4ad2-adbd-38d12f69f73f" >
			<route >
				<ms-inference:agent-define-prompt-template doc:name="Create Plan" doc:id="96651109-b214-4a94-bd3b-6d6ac17fb2e2" config-ref="GENERAL">
					<ms-inference:template ><![CDATA[You are a planner agent. You answer general question based on your knowledge. Things you know of without making up things.]]></ms-inference:template>
					<ms-inference:instructions ><![CDATA[#[vars.inferencePlanningInstructions]]]></ms-inference:instructions>
					<ms-inference:data ><![CDATA[#["Users query: " ++ (vars.userPrompt as String) ++ 
", Current Observation through called tools: " ++ (vars.multiToolsResult as String) ++ 
", already executed tools: " ++ (write(vars.toolsUsed default {}, "application/json") as String)]]]></ms-inference:data>
				</ms-inference:agent-define-prompt-template>
				<set-variable value='#[%dw 2.0
output application/json
var jsonString = payload.response as String
var cleanedString = jsonString replace /^```json\n/ with "" replace /```$/ with ""
---
read(cleanedString, "application/json")]' doc:name="Set multiTools" doc:id="0706208a-5c3c-490e-aed5-f29226042e44" variableName="multiTools" />
				<logger level="INFO" doc:name="🔎 Query Assessment 🔎" doc:id="35a339fa-99b5-4f8d-993c-05067dc1087a" message='#[%dw 2.0
output text
---
"\n\n" ++
"🔎🔎🔎🔎🔎️️ --------------------------  Query Assessment ----------------------- 🔎🔎🔎🔎🔎️\n" ++
"Tools : \n" ++ 
write(vars.multiTools, "application/json") ++ 
"\n 🔎🔎🔎🔎🔎️️ ---------------------------------------------------------------------- 🔎🔎🔎🔎🔎️" ++
"\n\n"]' category="🔎 Query Assessment 🔎"/>
			</route>
			<route >
				<ms-inference:tools-native-template doc:name="Use MCP Tools" doc:id="934c43bb-b9cf-4f83-9901-925c0243e76c" config-ref="GENERAL" target="planningPayload">
					<ms-inference:template ><![CDATA[You are a planner agent. You answer general question based on your knowledge.]]></ms-inference:template>
					<ms-inference:instructions ><![CDATA[Your Goals:
- Provide a polite, accurate, and concise response to the user's request, utilizing available tools and memory as appropriate.
- Ensure responses align with the user's intent while maintaining efficiency and relevance.

Your Tasks:
- Review the user's query, current observation (if available), and previously executed tools to determine the appropriate response or tool usage.
- Execute tools (e.g., profile analysis, content analysis, web search) only once, avoiding tools listed in the "already executed tools" section in the data.
- If the 'Current Observation through called tools' is empty, assume no tools have been executed yet.

Your Guardrails:
- Do not suggest or execute tools already used, as specified in the 'already executed tools' section in the data.
- Avoid redundant tool usage by cross-referencing the user's query, current observation, and last tools used before suggesting any tools.
- Don't make up things
]]></ms-inference:instructions>
					<ms-inference:data ><![CDATA[#["Users query: " ++ (vars.userPrompt as String) ++ 
", Current Observation through called tools: " ++ (vars.multiToolsResult as String) ++ 
", already executed tools: " ++ (write(vars.toolsUsed default {}, "application/json") as String)]]]></ms-inference:data>
					<ms-inference:tools ><![CDATA[#[vars.tools]]]></ms-inference:tools>
				</ms-inference:tools-native-template>
				<logger level="INFO" doc:name="🛠️ Tools reasoning 🛠️" doc:id="0b760f14-59e4-4653-9fae-b7a8694ed603" message='#[%dw 2.0
output text
---
"\n\n" ++
"🛠️🛠️🛠️🛠️🛠️️ --------------------------  Tool Reasoning -------------------------- 🛠️🛠️🛠️🛠️🛠️\n" ++
"Tools : \n" ++ 
write(vars.planningPayload, "application/json") ++ 
"\n 🛠️🛠️🛠️🛠️🛠️️ ---------------------------------------------------------------------- 🛠️🛠️🛠️🛠️🛠️" ++
"\n\n"]' category="🛠️ Tools reasoning 🛠️"/>
			</route>
		</scatter-gather>
		<set-variable value="#[%dw 2.0
output application/json
---
(vars.chainsOfThoughts default []) ++ [{
    &quot;cotId&quot;: now() as String {format: &quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot;},
    &quot;plan&quot;: vars.multiTools.plan default &quot;&quot;,
    &quot;multiTools&quot;: vars.multiTools.multiTools default true,
    &quot;final&quot;: vars.multiTools.final default false,
    &quot;toolsToCall&quot;: vars.planningPayload default &quot;&quot;
}]]" doc:name="Set COT" doc:id="c9add113-0568-4ad1-8bac-5f17b02b5e8b" variableName="chainsOfThoughts" />
		<logger level="INFO" doc:name="⛓️‍💥 Chain of Thoughts ⛓️‍💥" doc:id="60c6b8f7-eb84-4a51-a5d1-d1283c290ebe" message='#[%dw 2.0
output text
---
"\n\n" ++
"⛓️‍💥⛓️‍💥⛓️‍💥⛓️‍💥⛓️‍💥 --------------------------  Chain of Thoughts -------------------------- ⛓️‍💥⛓️‍💥⛓️‍💥⛓️‍💥⛓️‍💥️\n" ++
"Agent " ++ (vars.chainsOfThoughts as String default "") ++ "\n" ++
"\n⛓️‍💥⛓️‍💥⛓️‍💥⛓️‍💥⛓️‍💥️️ ----------------------------------------------------------------- ⛓️‍💥⛓️‍💥⛓️‍💥⛓️‍💥⛓️‍💥️" ++
"\n\n"]' category="⛓️‍💥 Chain of Thoughts ⛓️‍💥"/>
		<flow-ref doc:name="Assess and execute" doc:id="4b3e7994-d7fa-4461-aab1-08594f6f41ec" name="assess-and-execute"/>
	</sub-flow>
	<sub-flow name="assess-and-execute" doc:id="76d7a961-764e-43d6-ab34-95ca7968d3bb" >
		<choice doc:name="Choice" doc:id="13e33c57-5e5b-409f-a824-8f9b8a370cfe" >
			<when expression="#[(sizeOf(vars.planningPayload.tools default []) &gt; 0)]" >
				<set-variable value='#[%dw 2.0 
output application/json 
--- 
(vars.toolsUsed default {}) ++ (vars.planningPayload.tools default {})]' doc:name="toolsUsed" doc:id="c61b8fe9-8b71-456c-99bc-a7d6b78f33f6" variableName="toolsUsed"/>
				<foreach doc:name="For Each" doc:id="a9626602-22b3-406d-9112-d80a540234d8" collection="#[vars.planningPayload.tools]">
					<mcp:call-tool toolName='#[output text/plain
---
payload.function.name default "get_accounts"]' doc:name="MCP Client - Call Tool" doc:id="76b644a6-58c1-48c4-9cc8-f35b8b586096" config-ref="MCP_Client">
						<mcp:arguments><![CDATA[#[output application/json
---
read((payload as Object).function.arguments, "application/json")]]]></mcp:arguments>
					</mcp:call-tool>
					<logger level="DEBUG" doc:name="Logger payload after 🛠️ tool call" doc:id="e47d2e6b-4e12-4349-a00e-c8a4740a33e9" message="#[payload]" />
					<set-variable value='#[%dw 2.0 
output text/plain 
--- 
(vars.multiToolsResult default "Tool results: ") ++ "\n" ++ (vars.counter as String) ++ " - " ++ write(payload, "application/json")]' doc:name="multiToolsResult" doc:id="169ca959-7254-4d0e-8cac-f84e0d24675c" variableName="multiToolsResult" />
				</foreach>
				<choice doc:name="Choice" doc:id="7c217439-6bf7-4ba0-a4a6-7f1b1b942cbe" >
					<when expression="#[(vars.multiTools.multiTools == true)]">
						<flow-ref doc:name="Replanning" doc:id="2ff30bb8-1e65-4ef0-8357-f718aa0dc8ab" name="create-plan"/>
					</when>
				</choice>
				<ms-inference:agent-define-prompt-template doc:name="Reply to user using tool call" doc:id="c0acde70-2c57-401b-b9bf-a927ccdcecc8" config-ref="GENERAL">
					<ms-inference:template><![CDATA[ You are a helpful agent. Don't provide instructions to the users.]]></ms-inference:template>
					<ms-inference:instructions><![CDATA[Please answer the users question based on the tool calls. You have to consider the tool calls, and reply as if you have done the job and offer assistant in future. Dont say things like 'I'm here to help with your question!' or 'I'm here to help!', answer straight ]]></ms-inference:instructions>
					<ms-inference:data><![CDATA[#["Tool calls: " ++ vars.multiToolsResult as String ++ ", question: " ++ vars.userPrompt as String]]]></ms-inference:data>
				</ms-inference:agent-define-prompt-template>
			</when>
			<otherwise >
				<set-payload value="#[vars.planningPayload]" doc:name="Set Payload" doc:id="28ce85a6-b882-48a7-a9d4-77c81adf9962" />
			</otherwise>
		</choice>
	</sub-flow>
</mule>
